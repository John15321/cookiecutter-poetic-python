[tox]
skipsdist = true
envlist =
    python{37,38,39,310},
    format,
    formatting,
    imports,
    flake8,
    pylint,
    docs,
    package

isolated_build = True
whitelist_externals = poetry

[project-info]
project_name = {{ cookiecutter.project_slug }}
package_name = {{ cookiecutter.project_slug }}
whitelist_externals = git


; Package source code configuration
src_dir = src/{[project-info]package_name}/
tests_dir = tests/


; Documentation configuration
doc_dir = docs/
doc_src_dir = {[project-info]doc_dir}source/
doc_build_dir={[project-info]doc_dir}build/
doc_html_output_dir = {[project-info]doc_build_dir}html/


; Dependencies configuration
; std_deps = poetry


; Formatting configuration
max_line_length = 88


; Linting configuration
; ignore_errors =
; ignore_warnings =


; Checks for general formatting + imports
[testenv:formatting]
deps =
    black
commands = black --check --verbose --diff --color --line-length {[project-info]max_line_length} {[project-info]src_dir} {[project-info]tests_dir}


; Formats the code
[testenv:format]
deps =
    black
    isort
commands =
    isort --verbose --color --profile=black {[project-info]src_dir} {posargs}
    black --verbose --color {[project-info]src_dir} {[project-info]tests_dir}


; Checks for imports formatting
[testenv:imports]
deps =
    isort
    isort[colors]
commands = isort --check --verbose --diff --color --profile=black {[project-info]src_dir} {[project-info]tests_dir} {posargs}

; Linting
[testenv:pylint]
deps = pylint
commands =
    pylint --max-line-length {[project-info]max_line_length} {[project-info]src_dir}/ {[project-info]tests_dir}

[testenv:flake8]
deps = flake8
commands =
    flake8 --max-line-length {[project-info]max_line_length} {[project-info]src_dir} {[project-info]tests_dir}

[testenv:lint]
deps =
    pylint
    flake8
commands =
    flake8 --max-line-length {[project-info]max_line_length} {[project-info]src_dir} {[project-info]tests_dir}
    pylint --max-line-length {[project-info]max_line_length} {[project-info]src_dir}/ {[project-info]tests_dir}

; Builds the documentation
[testenv:docs]
deps =
    sphinx
    sphinx_rtd_theme
    toml
commands =
    sphinx-apidoc -o {[project-info]doc_dir} {[project-info]src_dir}
    sphinx-build -b html {[project-info]doc_src_dir} {[project-info]doc_html_output_dir}


; Builds the package
[testenv:package]
deps = poetry
commands =
    poetry install
    poetry build


; Tests the package
[testenv:tests]
deps =
    poetry
    pytest
commands =
    poetry install
    pytest {[project-info]tests_dir} {posargs} -vvv

; poetry add --dev pytest flake8 pylint black tox isort sphinx sphinx-rtd-theme


; TODO: add ignoring things like .tox or __pycache__ when/where needed (eg isort and flake8)