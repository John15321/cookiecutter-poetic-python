{% raw %}
name: ðŸ‘” Check formatting
on:
    pull_request:
    push:
        branches: ["main", "master", "develop", "release"]

jobs:
    lint:
        strategy:
            matrix:
                python-version: ["3.10"]
        name: ðŸ‘” Check formatting
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository code
              uses: actions/checkout@v2
            - name: Install Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: "${{ matrix.python-version }}"
            - name: Install and configure Poetry
              uses: snok/install-poetry@v1
              with:
                  version: 1.2.0
                  virtualenvs-create: true
                  virtualenvs-in-project: false
                  installer-parallel: true
            - name: Check formatting
              run: |
                  pip install tox
                  tox -e check_format
    check_format_markdown:
        name: ðŸ–‹ Check markdown files
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository code
              uses: actions/checkout@v2
            - name: Markdown Linting Action
              uses: avto-dev/markdown-lint@v1.5.0
              with:
                  args: "*.md"
    check_format_toml:
        name: ðŸª¦ Check toml files
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository code
              uses: actions/checkout@v2
            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Check toml formatting
              run: |
                  taplo --version || cargo install taplo-cli
                  taplo format --check

{% endraw %}